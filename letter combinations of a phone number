class Solution {
public:
void solve(string digits,map<char,string>& mp,vector<string>& ans,string res,int index){
    if(res.size()==digits.size() && digits.size()!=0){
        ans.push_back(res);
        return ;
    }

    
        for(char it1:mp[digits[index]]){
            res.push_back(it1);
            solve(digits,mp,ans,res,index+1);
            res.pop_back();
        }
    
}
    vector<string> letterCombinations(string digits) {
        map<char,string> mp;
        for(int i=0;i<digits.size();i++){
            if(digits[i]=='2'){
                mp['2']="abc";
            }
            if(digits[i]=='3'){
                mp['3']="def";
            }
            if(digits[i]=='4'){
                mp['4']="ghi";
            }
            if(digits[i]=='5'){
                mp['5']="jkl";
            }
            if(digits[i]=='6'){
                mp['6']="mno";
            }
            if(digits[i]=='7'){
                mp['7']="pqrs";
            }
            if(digits[i]=='8'){
                mp['8']="tuv";
            }
            if(digits[i]=='9'){
                mp['9']="wxyz";
            }
        }
        int index=0;
        string res="";
        vector<string> ans;
        solve(digits,mp,ans,res,index);
        return ans;
    }
};